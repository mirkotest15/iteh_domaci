+ Neophodno je da postoji baza (sa bar dve tabele koje su međusobno povezane)
+++ Nad bazom moraju biti implementirane osnovne CRUD operacije (najmanje 3). 
+++ Potrebno je da postoje PHP modeli koji odgovaraju MySQL tabelama - korišćenje OOP
+++ Potrebno je korišćenje superglobalnih promenljivih
+-- Potrebno je primeniti AJAX-a (najmanje 3 funkcionalnosti). 
+++ Kod je neophodno da bude verzionisan (najmanje 3 verzije/commita) sa smislenim porukama
+++ Kod je potrebno da bude postavljen na GitHub
--- Potrebno je postaviti dokumentaciju na Moodle. Dokumentaciju je potrebno uraditi po templejtu u prilogu i predati pod svojim imenom, prezimenom i brojem indeksa
--- Obezbediti bar dve dodatne funkcionalnosti (pretraga, sortiranje, upravljanje greškama i sl.) i koristiti JavaScript ili jQuery. 
+++ Sajt ima jedinstven dizajn uz korišćenje CSS-a i/ili frontend frejmvorka (Bootstrap, Foundation, itd.)
+++ Koristiti neke od PHP funkcija, kao što su require, include, date
+++ Korisiti napredne opcije superglobalnih promenljivih

current:
    + implement profile i new_post stranice
    + implement CRUD nad post-ovima
    + onda nastavi sa post.php
    + onda nastavi sa lajkovima
    - onda nastavi sa komentarima
    - Comments reply to commentID
    + na kraju spoji sve u forum.php
    - AJAX: +.Likes 2.FilterPostsByUser +.You posted XXXX posts already
    - JS additional: +.HowManyDaysAgoWasPosted +.OnClickSlikaPostaneFudbalskaLoptaUProfileDelu -.ValidacijaFormi

index:
    - form input validity checker: sva polja popunjena? email ima @?
    + implementirati proveravanje POST requesta
    + implementirati unos i citanje iz baze za korisnika
    + implementirati login -> model za korisnika kao static funkcija
    + zavrsiti register
    + fix Login/Register dugme gore desno na header.php
    + header -> notLoggedIn:Main|About LoggedIn:Main|Forum|Profile|NewPost|About

forum:
    + uredi frontend foruma
    + foreach petlja i prikaz html-a za svaki post
    + postaviti da se sortiraju prema datumu

new_post:
    + form for inputting a new post
    - validate the input with JS

post:
    + prikaz custom posta, npr preko id posta
    + implementiraj lajkovanje
    - implementiraj komentare
    + implementiraj post model
    + implementiraj crud post
    - edit post, ako je tvoj ili ako si admin

profile:
    + prikaz user-ovog profila
    - promena slike? -> jos jedno mesto u bazi za sliku BLOB/VARCHAR(base64) -> /user_pfp/1.jpg 2.jpg 3.jpg...(id).jpg